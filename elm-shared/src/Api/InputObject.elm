-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.InputObject exposing (..)

import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import ScalarCodecs


buildProductInput :
    ProductInputRequiredFields
    -> ProductInput
buildProductInput required____ =
    { title = required____.title, imageUrl = required____.imageUrl, price = required____.price }


type alias ProductInputRequiredFields =
    { title : String
    , imageUrl : String
    , price : ScalarCodecs.UsdPrice
    }


{-| Type for the ProductInput input object.
-}
type alias ProductInput =
    { title : String
    , imageUrl : String
    , price : ScalarCodecs.UsdPrice
    }


{-| Encode a ProductInput into a value that can be used as an argument.
-}
encodeProductInput : ProductInput -> Value
encodeProductInput input____ =
    Encode.maybeObject
        [ ( "title", Encode.string input____.title |> Just ), ( "imageUrl", Encode.string input____.imageUrl |> Just ), ( "price", (ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUsdPrice) input____.price |> Just ) ]
